openapi: '3.0.2'
info:
  title: API Title
  version: '1.0'
servers:
  - url: http://localhost:80  # only for preview function.
    description: development
  - url: http://172.20.0.6:80 # see "curl" and try in bash.
    description: backend
  - url: http://192.168.178.66:80 # see "curl" and try in bash.
    description: production


tags:
  - name: General
    description: The general API for communication with the embedded system
  - name: ELASTIC
    description: communication with elastic via python
  - name: default
    description: default API collection

paths:
  /TEST/{model}:
    parameters:
      - name: model
        in: path        
        required: true
        description: optional path parameter
        schema:
          type: string
          example:
            defaultModel
    get:
      tags:
        - "default"
      description: test for blabla
      responses:
        '200':
          description: OK
      parameters:
        - in: query
          name: test
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  type:
                    type: string
                  color:
                    type: string
                example:
                  id : 1
                  type: test
                  color: blue
    post:
      tags:
        - default  
      description: POST some data to the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Data1:
                  type: string
                Data2:
                  type: string
                Data3:
                  type: string
              example:
                Data1 : A String for Data 1
                Data2 : A String for Data 2
                Data3 : A String for Data 3
      responses:
        '200':
          description: OK


            

  /:
    get:
      description: Hello World
      responses:
        '200':
          description: OK
  /csv2elastic:
    get:
      tags:
        - "ELASTIC"
      description: CSV to Elastic for testing
      responses:
        '200':
          description: OK
      parameters:
        - in: query
          name: indexname
          example: "countryvaccinations"
          schema:
            type: string
        - in: query
          name: filename
          example: 'country_vaccinations.csv'
          schema:
            type: string
          

  /environment:
    get:
      tags:
        - "General"
      description: Check the environment of the running system
      responses:
        '200':
          description: OK
  /health:
    get:
      tags:
        - "General"
      description: Check the status
      responses:
        '200':
          description: OK
